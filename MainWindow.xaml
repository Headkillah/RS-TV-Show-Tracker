<Window x:Class="RoliSoft.TVShowTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:TVShowTracker="clr-namespace:RoliSoft.TVShowTracker" xmlns:Transitionals="clr-namespace:Transitionals.Controls;assembly=Transitionals" xmlns:Transitions="clr-namespace:Transitionals.Transitions;assembly=Transitionals" xmlns:Shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell" Title="RS TV Show Tracker" WindowStartupLocation="CenterScreen"
        Height="490" Width="900" MinWidth="900" MinHeight="300" Margin="0" Padding="0" TextOptions.TextFormattingMode="Display"
        UseLayoutRounding="True" SourceInitialized="WindowSourceInitialized" Loaded="WindowLoaded" KeyUp="WindowKeyUp" Closing="WindowClosing" Icon="/RSTVShowTracker;component/tv.ico">
    <Window.Resources>
        
        <!-- head gradient -->
        <LinearGradientBrush x:Key="HeadGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Maroon" Offset="0.8"/>
            <GradientStop Color="Red" Offset="0.1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HeadGradientBusy" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="DarkBlue" Offset="0.8"/>
            <GradientStop Color="Blue" Offset="0.1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HeadGradientHover" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="DarkOrange" Offset="0.8"/>
            <GradientStop Color="Yellow" Offset="0.1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="UpdateGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#7DFF8C00" Offset="0.7"/>
            <GradientStop Color="#7DFFFF00" Offset="0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="UpdateGradientHover" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFFF8C00" Offset="0.7"/>
            <GradientStop Color="#FFFFFF00" Offset="0"/>
        </LinearGradientBrush>

        <!-- tab control animation -->
        <DataTemplate x:Key="TabTemplate">
            <Transitionals:TransitionElement Content="{Binding}">
                <Transitionals:TransitionElement.Transition>
                    <Transitions:FadeAndGrowTransition />
                </Transitionals:TransitionElement.Transition>
            </Transitionals:TransitionElement>
        </DataTemplate>
        
        <!-- tab item style -->
        <Style x:Key="MainTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" BorderBrush="Red" BorderThickness="0,0,0,3" Margin="0" Cursor="Hand">
                                <ContentPresenter TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Grayscale" x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="6,2,9,2" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Red" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#50ff0000" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- tab item text style -->
        <Style x:Key="TabItemText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Lucida" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <!-- listview style -->
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="HoverOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>

                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="true" Margin="0,0,0,-1">
                            <Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="1" Fill="Transparent" RadiusX="1" RadiusY="1" />
                            <Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="#30000000" RadiusX="1" RadiusY="1" />
                            <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="#50000000" RadiusX="1" RadiusY="1" />
                            <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0,1,0,1" Margin="0">
                                <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualElement" Visibility="Collapsed" Stroke="#ffffff" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
            <Setter Property="Width" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="#50000000" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid>
                            <Border Name="HeaderBorder" BorderThickness="0" BorderBrush="#50000000" Background="#50000000" Padding="3">
                                <ContentPresenter Name="HeaderContent" TextElement.Foreground="White" Margin="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0" Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- scrollbar style -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="#30FFFFFF" BorderBrush="Transparent" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#50ffffff" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="#30FFFFFF" BorderBrush="Transparent" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="#30FFFFFF" BorderBrush="Transparent" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- combobox style -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="HoverOn">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="HoverOff">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid x:Name="grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" StrokeThickness="0" />
                <Rectangle Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#50000000" StrokeThickness="0" />
                <Border Margin="2,2,2,2" Grid.Column="1" Background="#30000000" x:Name="border" CornerRadius="2" />
                <Border Margin="2,2,2,2" Background="#FF393939" x:Name="HoverBorder" CornerRadius="2" Grid.Column="1" Opacity="0" />
                <Border Margin="2,2,2,2" Background="#ffffff" x:Name="HoverShineBorder" CornerRadius="2" Grid.Column="1" Opacity="0" />
                <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L3,6.5 5.5,0.5" Stroke="Black" Margin="5,0,5,0" Height="7" StrokeThickness="2" Stretch="Fill" />
                <Border Margin="2,2,2,2" Background="#00000000" x:Name="ShineBorder" CornerRadius="2" Grid.Column="1" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsChecked" Value="true" />
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Transparent" />
                    <Setter Property="Stroke" TargetName="Arrow" Value="Transparent"/>
                    <Setter Property="Background" TargetName="border" Value="#AAA"/>
                    <Setter Property="Opacity" TargetName="grid" Value="0.8"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            <ControlTemplate.Triggers>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="#FFFFFFFF" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="grid">
                <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
                <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="Transparent" Foreground="#FFFFFFFF" />
                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                        <Border x:Name="DropDownBorder" Background="#50000000" />
                        <ScrollViewer Margin="0" Style="{DynamicResource NuclearScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Grid>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Transparent" />
                    <Setter Property="Opacity" TargetName="grid" Value="0.5" />
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </Trigger>
                <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                    <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
                </Trigger>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                    <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Foreground" Value="#FFFFFFFF" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="HoverOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>

                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="true" Margin="0">
                            <Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="0.25" Fill="#30000000" RadiusX="1" RadiusY="1" />
                            <Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="#30000000" RadiusX="1" RadiusY="1" />
                            <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="#50000000" RadiusX="1" RadiusY="1" />
                            <ContentPresenter Margin="5,2,0,2" x:Name="contentPresenter" VerticalAlignment="Center" />
                            <Rectangle x:Name="FocusVisualElement" Visibility="Collapsed" Stroke="#ffffff" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- checkbox style -->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="Background" Value="#30000000" />
            <Setter Property="Foreground" Value="#FFFFFFFF" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template" Value="{DynamicResource CheckBoxTemplate}" />
        </Style>
        <Style x:Key="CheckBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="HoverOn">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="HoverOff">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="PressedOn">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="PressedOff">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="CheckedTrue">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="CheckedFalse">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="IndeterminateOn">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="IndeterminateOff">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="FocussedOn">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="FocussedOff">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <BulletDecorator Background="Transparent" x:Name="bulletDecorator">
                <BulletDecorator.Bullet>
                    <Grid Width="16" Height="16">
                        <Rectangle Height="14" Margin="1" x:Name="Background" Width="14" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle Height="14" Margin="1" x:Name="BackgroundOverlay" Width="14" Opacity="0" Fill="{x:Null}" Stroke="#FF393939" StrokeThickness="2" />
                        <Rectangle Height="16" x:Name="PressedRectangle" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="#FF393939" StrokeThickness="1" />
                        <Path Height="10" Margin="1,1,0,1.5" x:Name="CheckIcon" Width="10.5" Opacity="0" Fill="#FFFFFF" Stretch="Fill" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" />
                        <Rectangle Height="8" x:Name="IndeterminateIcon" Width="10" Opacity="0" Fill="Black" />
                        <Rectangle Height="14" x:Name="DisabledVisualElement" Width="14" Opacity="0" Fill="#FF787878" />
                        <Rectangle Height="16" x:Name="ContentFocusVisualElement" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="#ffffff" StrokeThickness="1" />
                        <Rectangle Height="12" x:Name="ShineRectangle" Width="14" IsHitTestVisible="false" Opacity="1" Stroke="{x:Null}" StrokeThickness="1" Fill="#00000000" Margin="2,2,2,2" />
                    </Grid>
                </BulletDecorator.Bullet>
                <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            </BulletDecorator>
            <ControlTemplate.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard" />
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FocussedOn}" x:Name="FocussedOn_BeginStoryboard" />
                    </Trigger.EnterActions>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsChecked" Value="True" />
                        <Condition Property="IsThreeState" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard x:Name="ThreeStateOn_BeginStoryboard" Storyboard="{StaticResource CheckedFalse}" />
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard x:Name="ThreeStateOff_BeginStoryboard" Storyboard="{StaticResource CheckedTrue}" />
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsChecked" Value="{x:Null}" />
                        <Condition Property="IsThreeState" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard x:Name="ThreeStateOn1_BeginStoryboard" Storyboard="{StaticResource IndeterminateOn}" />
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard x:Name="ThreeStateOff1_BeginStoryboard" Storyboard="{StaticResource IndeterminateOff}" />
                    </MultiTrigger.ExitActions>
                    <Setter Property="Visibility" TargetName="CheckIcon" Value="Hidden" />
                </MultiTrigger>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource CheckedFalse}" x:Name="CheckedTrue_BeginStoryboard" />
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="CheckedTrue_BeginStoryboard1" Storyboard="{StaticResource CheckedTrue}" />
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" Value="#FF787878" TargetName="Background" />
                    <Setter Property="Stroke" Value="#AAA" TargetName="Background" />
                    <Setter Property="Foreground" Value="Transparent" />
                    <Setter Property="Opacity" TargetName="bulletDecorator" Value="0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <!-- textbox style -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="Template" Value="{DynamicResource TextBoxTemplate}" />
            <Setter Property="Foreground" Value="#FFFFFFFF" />
            <Setter Property="Background" Value="#50000000"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
            <Grid>
                <Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}">
                    <Grid>
                        <Border BorderThickness="1" Padding="0,2,0,0">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{DynamicResource NuclearScrollViewer}" />
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </ControlTemplate>

    </Window.Resources>
    <Border BorderThickness="1" Name="mainBorder" CornerRadius="6" Padding="5">
        <Grid>
            
            <!-- logo menu -->

            <Menu Name="logoMenu" IsMainMenu="True" Margin="7,-1,0,0" Padding="0" Width="157" HorizontalAlignment="Left" VerticalAlignment="Top">
                <MenuItem Header="Main menu" Name="logoMenuItem" SubmenuClosed="LogoMenuItemSubmenuClosed">
                    <MenuItem Header="Add new TV show" Click="AddNewTVShowClick">
                        <MenuItem.Icon>
                            <Image Source="/RSTVShowTracker;component/Images/plus.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Update database" Click="UpdateDatabaseClick">
                        <MenuItem.Icon>
                            <Image Source="/RSTVShowTracker;component/Images/refresh.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <!-- <MenuItem Header="Activate beta features" Click="ActivateBetaFeaturesClick">
                        <MenuItem.Icon>
                            <Image Source="/RSTVShowTracker;component/Images/new.png" />
                        </MenuItem.Icon>
                    </MenuItem> -->
                    <MenuItem Header="Configure software" Click="ConfigureSoftwareClick">
                        <MenuItem.Icon>
                            <Image Source="/RSTVShowTracker;component/Images/settings.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Minimize to tray" Click="MinimizeToTrayClick">
                        <MenuItem.Icon>
                            <Image Source="/RSTVShowTracker;component/Images/minimize.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Open help page" Click="OpenHelpPageClick">
                        <MenuItem.Icon>
                            <Image Source="/RSTVShowTracker;component/Images/question.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="About the software" Click="AboutSoftwareClick">
                        <MenuItem.Icon>
                            <Image Source="/RSTVShowTracker;component/Images/information.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
            
            <!-- logo -->
            
            <Border Name="logo" Cursor="Hand" Shell:WindowChrome.IsHitTestVisibleInChrome="True" Margin="5,-5,0,0" Padding="0" Width="160" MaxWidth="160" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="1,0,1,1" BorderBrush="DimGray" CornerRadius="0,0,4,4" Background="{StaticResource HeadGradient}" MouseLeftButtonUp="LogoMouseLeftButtonUp" MouseEnter="LogoMouseEnter" MouseLeave="LogoMouseLeave">
                <Grid>
                    <Rectangle Fill="{StaticResource HeadGradientBusy}" Width="0" HorizontalAlignment="Left" Name="progressRectangle" Opacity="0" Margin="0" />
                    <Image Source="/RSTVShowTracker;component/Images/tv.png" Height="16" Width="16" HorizontalAlignment="Left" Margin="8,-3,0,0"></Image>
                    <Label TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Grayscale" HorizontalAlignment="Left" Foreground="White" Content="RS TV Show Tracker v2" Padding="30,3,8,5">
                        <Label.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Gray" Direction="316" ShadowDepth="2" />
                        </Label.Effect>
                    </Label>
                </Grid>
            </Border>
            <Label Name="lastUpdatedLabel" TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Grayscale" HorizontalAlignment="Left" Foreground="White" Content="last updated label" Margin="165,-7,0,0">
                <Label.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="0" ShadowDepth="0" />
                </Label.Effect>
            </Label>
            
            <!-- update -->

            <Border Name="updateOuter" Margin="0,-5,106,0" Shell:WindowChrome.IsHitTestVisibleInChrome="True" HorizontalAlignment="Right" VerticalAlignment="Top" BorderThickness="1,0,1,1" BorderBrush="#7DFFFFFF" CornerRadius="0,0,4,4" MouseLeftButtonUp="UpdateMouseLeftButtonUp" MouseEnter="UpdateMouseEnter" MouseLeave="UpdateMouseLeave" Visibility="Collapsed">
                <Border Name="update" Cursor="Hand" BorderThickness="1,0,1,1" BorderBrush="DimGray" CornerRadius="0,0,4,4" Background="{StaticResource UpdateGradient}">
                    <Border.ToolTip>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/RSTVShowTracker;component/Images/new.png" Height="16" Width="16" VerticalAlignment="Top" Margin="0,3,5,0" />
                            <StackPanel Orientation="Vertical">
                                <TextBlock Name="updateToolTipTitle" FontWeight="Bold" Margin="0,3,0,3" />
                                <TextBlock Name="updateToolTipText" Margin="0,0,0,3" TextWrapping="Wrap" />
                                <TextBlock FontStyle="Italic" Text="Click to initiate update." TextWrapping="Wrap" />
                            </StackPanel>
                        </StackPanel>
                    </Border.ToolTip>
                    <Grid>
                        <Label FontSize="11" HorizontalAlignment="Left" Foreground="White" Content="New version available!" Padding="6,2" Height="18">
                            <Label.Effect>
                                <DropShadowEffect BlurRadius="5" Color="Gray" Direction="316" ShadowDepth="0" />
                            </Label.Effect>
                        </Label>
                    </Grid>
                </Border>
            </Border>

            <!-- tabs -->
            
            <TabControl Name="tabControl" ContentTemplate="{StaticResource TabTemplate}" Background="#82000000" BorderBrush="Transparent" Margin="0,25,0,6" BorderThickness="0">
                
                <!-- overview -->
                <TabItem Name="overviewTab" Style="{StaticResource MainTabItem}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/RSTVShowTracker;component/Images/overview.png" Margin="0,-3,5,0" Height="16" Width="16"></Image>
                            <TextBlock Style="{StaticResource TabItemText}" Text="Overview">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="0" ShadowDepth="0" BlurRadius="5" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <TVShowTracker:OverviewPage x:Name="activeOverviewPage" Margin="-4" />
                </TabItem>
                
                <!-- guides -->
                <TabItem Name="guidesTab" Style="{StaticResource MainTabItem}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/RSTVShowTracker;component/Images/guides.png" Margin="0,-1,5,0" Height="16" Width="16"></Image>
                            <TextBlock Style="{StaticResource TabItemText}" Text="Guides">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="0" ShadowDepth="0" BlurRadius="5" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <TVShowTracker:GuidesPage x:Name="activeGuidesPage" Margin="-4" />
                </TabItem>
                
                <!-- downloads-->
                <TabItem Name="downloadsTab" Style="{StaticResource MainTabItem}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/RSTVShowTracker;component/Images/torrents.png" Margin="0,-3,5,0" Height="16" Width="16"></Image>
                            <TextBlock Style="{StaticResource TabItemText}" Text="Downloads">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="0" ShadowDepth="0" BlurRadius="5" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <TVShowTracker:DownloadLinksPage x:Name="activeDownloadLinksPage" Margin="-4" />
                </TabItem>
                
                <!-- subtitles -->
                <TabItem Name="subtitlesTab" Style="{StaticResource MainTabItem}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/RSTVShowTracker;component/Images/subtitles.png" Margin="0,-3,5,0" Height="16" Width="16"></Image>
                            <TextBlock Style="{StaticResource TabItemText}" Text="Subtitles">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="0" ShadowDepth="0" BlurRadius="5" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <TVShowTracker:SubtitlesPage x:Name="activeSubtitlesPage" Margin="-4" />
                </TabItem>
                
                <!-- statistics -->
                <TabItem Name="statisticsTab" Style="{StaticResource MainTabItem}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/RSTVShowTracker;component/Images/statistics.png" Margin="0,-3,5,0" Height="16" Width="16"></Image>
                            <TextBlock Style="{StaticResource TabItemText}" Text="Statistics">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="0" ShadowDepth="0" BlurRadius="5" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <TVShowTracker:StatisticsPage x:Name="activeStatisticsPage" Margin="-4" />
                </TabItem>
                
                <!-- recommendations -->
                <TabItem Name="recommendationsTab" Style="{StaticResource MainTabItem}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/RSTVShowTracker;component/Images/information.png" Margin="0,-3,5,0" Height="16" Width="16"></Image>
                            <TextBlock Style="{StaticResource TabItemText}" Text="Recommendations">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="0" ShadowDepth="0" BlurRadius="5" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <TVShowTracker:RecommendationsPage x:Name="activeRecommendationsPage" Margin="-4" />
                </TabItem>
            </TabControl>
            
            <!-- bottom -->

            <Border BorderThickness="0,0,0,0" CornerRadius="0,0,6,6" Height="6" Background="#82000000" VerticalAlignment="Bottom" />
        </Grid>
    </Border>
</Window>
